name: conan

on:
  push:

env:
  CHANNEL: stable

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.11]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/cache@v2
        id: poetry_cache_id
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: install conan
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        shell: bash
        run: |
          poetry install --no-interaction --no-root
      - name: prepare build
        shell: bash
        run: |
          USER_CHANNEL=${GITHUB_REPOSITORY//\//+}/$CHANNEL
          . ./bin/env.sh
          REFERENCE=$PACKAGE_NAME/$PACKAGE_VERSION@$USER_CHANNEL
      - name: build
        run: |
          . .venv/bin/activate
          export CONAN_USER_HOME=${GITHUB_WORKSPACE}/.conan/
          ./bin/build.sh

  fuzz:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.11]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install fuzzer
        run: |
          sudo apt-get update -y
          sudo apt-get install -y afl++
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/cache@v2
        id: poetry_cache_id
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: install conan
        if: steps.poetry_cache_id.outputs.cache-hit != 'true'
        shell: bash
        run: |
          poetry install --no-interaction --no-root
      - name: fuzzing
        shell: bash
        run: |
          . .venv/bin/activate
          export CONAN_USER_HOME=${GITHUB_WORKSPACE}/.conan/
          ./bin/build.sh
          exit 1

#   deploy:
#     runs-on: ubuntu-latest
#     container:
#       image: conanio/gcc7
#     steps:
#       - name: prepare packaging
#         run: |
#           USER_CHANNEL=$CI_PROJECT_PATH//\//+/$CHANNEL
#           . ./bin/env.sh
#           REFERENCE=$PACKAGE_NAME/$PACKAGE_VERSION@$USER_CHANNEL
#           echo upload $REFERENCE to $URL
#       - name: packaging
#         run: |
#           bash ./bin/package.sh $USER_CHANNEL
#           conan upload $REFERENCE --all --remote=gitlab --confirm --force
